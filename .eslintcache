[{"C:\\Users\\raffb\\Documents\\notes\\src\\index.js":"1","C:\\Users\\raffb\\Documents\\notes\\src\\App.js":"2","C:\\Users\\raffb\\Documents\\notes\\src\\reportWebVitals.js":"3","C:\\Users\\raffb\\Documents\\notes\\src\\components\\todo.jsx":"4","C:\\Users\\raffb\\Documents\\notes\\src\\components\\Input.jsx":"5","C:\\Users\\raffb\\Documents\\notes\\src\\components\\ToDo.jsx":"6","C:\\Users\\raffb\\Documents\\notes\\src\\components\\output.jsx":"7","C:\\Users\\raffb\\Documents\\notes\\src\\components\\button.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":235,"mtime":1610591982532,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2143,"mtime":1610593079203,"results":"13","hashOfConfig":"10"},{"size":503,"mtime":1610592022927,"results":"14","hashOfConfig":"10"},{"size":890,"mtime":1610541373990,"results":"15","hashOfConfig":"10"},{"size":993,"mtime":1610591902037,"results":"16","hashOfConfig":"10"},{"size":186,"mtime":1610591851232,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1953xpc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\raffb\\Documents\\notes\\src\\index.js",[],["39","40"],"C:\\Users\\raffb\\Documents\\notes\\src\\App.js",[],"C:\\Users\\raffb\\Documents\\notes\\src\\reportWebVitals.js",[],"C:\\Users\\raffb\\Documents\\notes\\src\\components\\todo.jsx",["41"],"import { useState, useEffect } from 'react';\r\nimport input from './Input';\r\nimport output from './output';\r\n\r\nconst Todo = () => {\r\n    const [thingsToDo, setThingsToDo] = useState([]);\r\n    //storage\r\n    useEffect(() => {\r\n        const data = localStorage.getItem('saved-notes');\r\n        if (data) {\r\n            setThingsToDo(JSON.parse(data));\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"saved-notes\", JSON.stringify(thingsToDo));\r\n    })\r\n\r\n    const addNewNote = (newNote) => {\r\n        if (newNote.length === 0 || !newNote.trim()) {\r\n            window.alert(`Note cannot be empty`);\r\n        }\r\n        else {\r\n            //TODO: Change to object {name: X, note:Y}.\r\n            setThingsToDo([...thingsToDo.concat(newNote)]);\r\n        }\r\n    }\r\n\r\n    const deleteNote = (idOfNote) => {\r\n        const newArr = [...thingsToDo];\r\n        newArr.splice(idOfNote, 1);\r\n        setThingsToDo(newArr);\r\n    }\r\n\r\n    const moveUp = (idOfNote) => {\r\n        if (idOfNote > 0) {\r\n            const newArr = [...thingsToDo];\r\n            swapElements(newArr, idOfNote - 1, idOfNote);\r\n            setThingsToDo(newArr);\r\n        }\r\n    }\r\n\r\n    const moveDown = (idOfNote) => {\r\n        if (idOfNote + 1 < thingsToDo.length) {//prevents array out of bounds\r\n            const newArr = [...thingsToDo];\r\n            swapElements(newArr, idOfNote + 1, idOfNote);\r\n            setThingsToDo(newArr);\r\n        }\r\n    }\r\n\r\n    const editNote = (idOfNote, e) => {\r\n        const newArr = [...thingsToDo];\r\n        newArr[idOfNote] = e;\r\n        if (e.length === 0 || !e.trim()) {\r\n            newArr[idOfNote] = `Do not leave blank!`;\r\n        }\r\n        setThingsToDo(newArr);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your notes</h1>\r\n            <input.InputField addNewNote={addNewNote} />\r\n            <output.OutPutField data={thingsToDo} deleteNote={deleteNote} moveUp={moveUp} moveDown={moveDown} editNote={editNote} />\r\n        </div>\r\n    )\r\n\r\n}\r\nconst swapElements = (arr, e1, e2) => {\r\n    let temp = arr[e1];\r\n    arr[e1] = arr[e2]\r\n    arr[e2] = temp;\r\n}\r\n\r\nexport default { Todo }\r\n\r\n","C:\\Users\\raffb\\Documents\\notes\\src\\components\\Input.jsx",["42"],"import { useState } from 'react'\r\nimport button from './button';\r\nimport './input.css'\r\n\r\nconst InputField = (props) => {\r\n    const [textInput, setTextInput] = useState('');\r\n\r\n    return (\r\n        <div >\r\n            <input type=\"text\" className=\"input\" onChange={(e) => { setTextInput(e.target.value); }}></input>\r\n            <button.Button className={\"button button2\"} btnName=\"Add\" doWhat={textInput} eventHandler={props.addNewNote} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default { InputField }","C:\\Users\\raffb\\Documents\\notes\\src\\components\\ToDo.jsx",["43","44"],"C:\\Users\\raffb\\Documents\\notes\\src\\components\\output.jsx",["45"],"\r\nimport button from './button'\r\nimport './output.css'\r\nconst OutPutField = (props) => {\r\n\r\n    const listNotes = props.data.map((note, index) =>\r\n        <div key={index} className=\"wrap\">\r\n            <div className=\"horizontal\">\r\n                <button.Button className={\"btn\"} eventHandler={props.moveUp} doWhat={index} btnName=\"Up\" />\r\n                <button.Button className={\"btn\"} eventHandler={props.moveDown} doWhat={index} btnName=\"Down\" />\r\n            </div>\r\n            <div className=\"list\">\r\n                <div className=\"container\"></div>\r\n                <p>\r\n                    <input type=\"text\" value={note} onChange={(e) => { props.editNote(index, e.target.value)}}></input>\r\n                    <span>\r\n                        <i className=\"fas fa-minus-circle\" onClick={() => { props.deleteNote(index);}}></i>\r\n                    </span>\r\n                </p>\r\n\r\n            </div>\r\n        </div>)\r\n\r\n    return listNotes;\r\n}\r\n\r\nexport default { OutPutField }\r\n","C:\\Users\\raffb\\Documents\\notes\\src\\components\\button.jsx",["46"],"const Button = (props) => <button className={props.className} color=\"primary\" onClick={() => { props.eventHandler(props.doWhat); }}>{props.btnName}</button>\r\n\r\nexport default { Button };",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":75,"column":1,"nodeType":"53","endLine":75,"endColumn":24},{"ruleId":"51","severity":1,"message":"52","line":17,"column":1,"nodeType":"53","endLine":17,"endColumn":30},{"ruleId":"54","severity":1,"message":"55","line":20,"column":11,"nodeType":"56","messageId":"57","endLine":20,"endColumn":21},{"ruleId":"51","severity":1,"message":"52","line":35,"column":1,"nodeType":"53","endLine":35,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":27,"column":1,"nodeType":"53","endLine":27,"endColumn":31},{"ruleId":"51","severity":1,"message":"52","line":3,"column":1,"nodeType":"53","endLine":3,"endColumn":27},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'deleteNote' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]